// Package Summary provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package Summary

import (
	"time"
)

// SummaryResponse defines model for Summary response.
type SummaryResponse struct {

	// A summary of which devices were used and when to upload diabetes data
	Activity *[]struct {

		// The client software that provided diabetes data
		Client *struct {

			// The name of the client software used to extract the data
			Name *string `json:"name,omitempty"`

			// The software platform on which the client software was run
			Platform *string                 `json:"platform,omitempty"`
			Private  *map[string]interface{} `json:"private,omitempty"`

			// The version of the client software used to extract the data
			Version *string `json:"version,omitempty"`
		} `json:"client,omitempty"`

		// The device used to provide diabetes data
		Device *struct {

			// An array of string tags indicating the manufacturer(s) of the device.
			//
			// In order to avoid confusion resulting from referring to a single manufacturer with more than one name—for example, using both 'Minimed' and 'Medtronic' interchangeably—we restrict the set of strings used to refer to manufacturers to the set listed above and enforce *exact* string matches (including casing).
			//
			// `deviceManufacturers` is an array of one or more string "tags" because there are devices resulting from a collaboration between more than one manufacturer, such as the Tandem G4 insulin pump with CGM integration (a collaboration between `Tandem` and `Dexcom`).
			DeviceManufacturers *[]string `json:"deviceManufacturers,omitempty"`

			// A string identifying the model of the device.
			//
			// The `deviceModel` is a non-empty string that encodes the model of device. We endeavor to match each manufacturer's standard for how they represent model name in terms of casing, whether parts of the name are represented as one word or two, etc.
			DeviceModel *string `json:"deviceModel,omitempty"`

			// A string encoding the device's serial number.
			//
			// The `deviceSerialNumber` is a string that encodes the serial number of the device. Note that even if a manufacturer only uses digits in its serial numbers, the SN should be stored as a string regardless.
			//
			// Uniquely of string fields in the Tidepool device data models, `deviceSerialNumber` *may* be an empty string. This is essentially a compromise: having the device serial number is extremely important (especially for e.g., clinical studies) but in 2016 we came across our first case where we *cannot* recover the serial number of the device that generated the data: Dexcom G5 data uploaded to Tidepool through Apple iOS's HealthKit integration.
			DeviceSerialNumber *string `json:"deviceSerialNumber,omitempty"`

			// An array of string tags indicating the function(s) of the device.
			//
			// The `deviceTags` array should be fairly self-explanatory as an array of tags indicating the function(s) of a particular device. For example, the Insulet OmniPod insulin delivery system has the tags `bgm` and `insulin-pump` since the PDM is both an insulin pump controller and includes a built-in blood glucose monitor.
			DeviceTags *[]interface{} `json:"deviceTags,omitempty"`
		} `json:"device,omitempty"`

		// The time that that the device was last used to provide diabetes data
		Event *struct {

			// The time of the most recent upload.
			Time time.Time `json:"time"`

			// The data type that was uploaded.
			Type string `json:"type"`
		} `json:"event,omitempty"`
	} `json:"activity,omitempty"`

	// Summary of recent glucose information.
	Reports *[]struct {

		// The date on which the summary was created.
		Computed *time.Time `json:"computed,omitempty"`

		// The date of the earliest sample included in the summary
		EarliestDatum *time.Time `json:"earliestDatum,omitempty"`

		// The date of the latest sample included in the summary
		LatestDatum *time.Time `json:"latestDatum,omitempty"`

		// The period over which the summary spans
		Period *struct {

			// The unit of measurement for the period
			Units *string `json:"units,omitempty"`

			// The number of units bounded by the summary
			Value *int `json:"value,omitempty"`
		} `json:"period,omitempty"`

		// The summary statistics for the period given.
		Stats *[]struct {

			// Average glucose over samples in period
			AverageGlucose *struct {
				Units string `json:"units"`

				// Average glucose value in units provided
				Value float32 `json:"value"`
			} `json:"averageGlucose,omitempty"`

			// Percentage of samples in range
			TimeInRange *struct {
				Units string `json:"units"`

				// The amount of time in range.
				Value float32 `json:"value"`
			} `json:"timeInRange,omitempty"`
		} `json:"stats,omitempty"`
	} `json:"reports,omitempty"`

	// String representation of a Tidepool User ID
	Userid *TidepoolUserID `json:"userid,omitempty"`
}

// TidepoolUserID defines model for Tidepool User ID.
type TidepoolUserID string

