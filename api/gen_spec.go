// Package Summary provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

