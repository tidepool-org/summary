// Package Summary provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

