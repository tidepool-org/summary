// Package Summary provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package Summary

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xa624bOZZ+FYLbQGy3LiUldsf6s+tOejNBJ3G27cxi29LCVNWRitMsskKyZGvTAuYh",
	"5gnnSRaHrAtLKil2kh3sAA0EcamKPDyXj+dGfqKxynIlQVpDJ5+oiVPImHv8j4JJywXgM0sSbrmSTLzX",
	"KgdtORg6WTBhoEcTMLHmOX6nE3pBPpYTiVoQw7JcgBkQcjk3oFdAbMossSmQWBXSEm6Iyj3pASFXKoOp",
	"5DgnA2kZfiAZWxOpLMkYl5ZxSeCexdbPN4OppD2aB1yhSIW0+NDm7DoFIotsDho5WzFRgCFzEOrO8WNT",
	"DSZVIvGfBrRH7ToHOqFcWliCppselSyDPZRZ5iRGUpUGAhrGai6XSCIHHaNsyz2Emu+BAg/zuVA6Y5ZO",
	"6EIoZmmPZuyeZ0VGJ6Mo6tGMS/8rqtnxekB2anLd3DSrdch2cN3DC296VMPHgmtI6OTG6zVkpqWnWY9a",
	"bhGKDSprimr+F4hx8fs+3HttoSjlc4CHcWU+ugK9fqPu2otMokF0fj5uaeT02QY5vSqyjOn1e9BcJQ/Y",
	"DwtWCATgZntzlIRIwtkcLBhiEOPG8tiQDCxLmGU7cBYglzbFp+94Qif0X4bN92HueArfFJJbQwM2KO11",
	"GNZTrazqyaBNQaLBbmjC1rRH7wB+Q/U3mr2p31Um8Woh1bo7gDeW6T3b0X0iCbPQZoTMgcsl0ZArbSFp",
	"YQ1H9y3PoGutIsfP+7DMs8b/GAiVfwcaiGDGkpICWSjtGFryFchAPw/hYwvcpQErTTRcBkqskNENiAdB",
	"vT8K0eLNVGufjqNx1I/O+uPn11E0cf9+DVipBvzQj05xwMgPCOH/i7PG/xH8d1Cf15vtOw0LB/smVA3L",
	"ODVs70wPNh/JHjDrqll922Tl6hW9g4Z6nH0aub6xpQLZK4cXjc56NAMm0SH/0KOV78Zt/JVusRes0lAQ",
	"O7NH0SAanT9vTX8etaaPRvX8lC/TLQLn54MfTtvLj7YJnLVE+NMuERcGAwrj02gz61HvsiY0Ww4TgVgP",
	"wf6xAPNVaC9JEEYMWPRvyGNSB1BMiqrEIXhL3n64uiZcxqJIwHkgHGAmZFoLN6U9MnW68k9C3fmH0oBT",
	"OiCXNgW9S/viv8gcSK7ViieQDEhH9hSA5BPlFjLzWSW0CXyDHOnBSYlLgWpfHar2Qog6ecoKY1HuriTK",
	"KvxS6jshXDbJaWeK88g8ZrbtHDb1C6Y1W7ug5WF42Gc1r/rlq34bqv3GCn1PcZu5KkI3Fu7wa7oEfgff",
	"9XomV9LA1+yNC2LK9Uo4ZMpYogF3bBMeMPo549ZbqDCgzYDsgJbFlq+4Xe/JkurPvYDj1x7b28zezA4y",
	"e5fyOCUJrHgMZd5QGEgIkwm5S0EioIpcKJa05aC9B26m7bV9EkSU9ORZQNYxQe6YCdUn1o6h3apIcNhX",
	"FvlvxKiFvWO6TJIqL7Ejx5ds9+0VnM6sInBvNVZzOKYiz6wFjUT++4b1/+ei/2vUP58d/d786M8+Rb2z",
	"0Sb4fHw0nQ4eMfz4++9oA/4XW9xV23indhPMokfYk81W06th3miIly4VoN10gQ44zK4zFl9ekVE0GJ0O",
	"noUbdJvHmpcuPjVfMevMUk1/eyibtGxpfNJvGZ1tehhJjBOsS87y49eZ9ij6/WbUP59Np8nJ8XQ6OPj7",
	"qB/+/B3/K43Zn91E/fPq+cTB4KFjj0+O//VoOv0+fPu9w1H4Akcdwkqlqq4qoJrzstpB27rKWfwbZiiP",
	"SiHLXOeaJ5ArJcgH525A0xCgW0AKTEpHg/HTwTOf23sf8jWuHBFReqLK8qXn+Izj8JPeMlksWGwLDdrs",
	"4u1CEhcnXS/EKZYgWAmXCY+Zdb8xfARUjsxxBU2/xGAqp/K1JEonoJE/tlI8IbGSi8IBWYMphKO10Coj",
	"Ghag/VIKQw+XS9Fegtxxm5JMeVcpiZLeZ/z9r3/DcFVaq0cKnEvmyqbkyVsueQbJExcpnryFxGolefyE",
	"cGlBxymTS2Bzsf77X/92B8iS1bzcPWXw8/KbWs2OT3wIWTP4opokuMFals3VCty6IBdKx0BOXA/tpFJp",
	"xmycgiFHPg/CVzFD3o+d7m47THVLuCEssA7qQGmvlJLslKKtppTMIWaFcemsBoLArwLoluoZiZUQbK60",
	"7/3Nwd4ByC1Vh/L2iCnilDDjhL5mMoGMvHpGuDSF4JLkRZZ7c7149dbpelnSPtq32K2ncus0dvsS7mOV",
	"3R4Pwgi+m7Fu5XSlxlQCogPUlYJ4AtLyxbqGMY7vAC/usduApFc+kUr2Icvtut4aGLdBxioB0yZYEiP/",
	"CQRkAmylSuTYOCXA4rSl1CeuNJcJ074Rkvq0GbPDXINBF+YpuxCPOTPozOA6HjY9zFVcBZIzbU0lkRuN",
	"1q/JIDiNs+md0gnix96pHgEbd9YFXoor0JyJdz4D369cp4dKs34myuUml43gbeWGlEsd79Nsi86Wycg7",
	"ZcskClYgCV8Q1vYfSvo0zZCEL7lFf0bwT4uq6TmiV++ISVUhEixUjFXaK61mTcOS6USAMU6cD5J/LECE",
	"HnPBQSSmqm3quFF6bZdlO3OaXrciTjK2PsHVmSQh3gbkOuUG9QQGrcmZEGu3h7Ncq4wbmJCUrdo22NIc",
	"Tr63GjJkmWeY6zJpyRGYHGJP0LnUwXLQw/ApecwEMbZIOJhjMi8syjWORmfkDkjsEBZrZQxRhSYLro1F",
	"UAIiEpMuICcxk1LZE8yX1Qr058zpDbkECdp1Bqt8ZkK8ayCvTr0OfdrvfXOtZJtqVSxTcpHnAgi/vHpi",
	"yJ+ACZv+zG3ojw4A/tqlZ18YGheFjHFGd1gMwI+r3JYkG8AtGNdiTQyIRR/uc8Eks0qvHQIDBh6wMnPO",
	"gMeFYLreKf8ehkuc9Br9NlhymUn+XiW1H09A8BXoNTFrYyEjaenx3cK382XlrsvxffT7txi7Y99Fef/y",
	"LWLNxWIm2+EhVtJqJQRoR6NsBuAWmxdc2D6XZC6USshSFLEy6FYlt0q3QgKT68uFa6xVLfT5EpPz2P0f",
	"skVnm1nvcyEkyB59fkde+lStozBHJ2M/10D44PqHP7mhIfVffNFdLnLRVMq7fYuDM0jZHqC7wdCXsB0Q",
	"vmrq6rL2rzTMpe+8lBuj1vID2rpln3qXYd/vdf7DD8VEtKMdg74geUQ/JmeaZWBBmz7OfZ2UHZqdBkyl",
	"h3qNzv5L2V15VEnQ9D9uwkr/W1UKYZ3Qmbbf0B/ZGjSdVSPf+ZUvTAzScEZeKGnRIb+De0suJdDuYE5H",
	"46fPTs9aoHZnLEHX++w6ej4Zn0+i8a+By8zmWHLNArDdPLzZXvXSDzXbR6Ng3Y5u++j5WVR320fRF3fb",
	"R9EPp/u77c+iA8328WB0Gp3u77WPno+fHuy1R4Nn47OzA832FoU9zfYuKnsa7r0/zkP+P5+HzMITkeC0",
	"7B90BLjvHoeyrUyt6vLz8Ji24+pBcI3DY2Cb8Ftgsg5ALjPcIR30gcLRtONiRescZX/mVt+WyYCZQrt7",
	"L+bBIa++DvEPPlb4Vqehf+zMLzyp7NEwn/vK9l14MaK8nRWcLfhrEY9q7fmQ3XkUU96Y+MztFMdRx9GQ",
	"L7EGWz3zOkJE16Nnk3HkQvRs312NErpvUKwyh73ec53Ev+iWAz99Vg5XF+JQr1lUZ1UlhpdtXPbSo/F8",
	"uX3Zxn2ZbdcCkJCXSPnaM3H4+knJqRN/tiO/u3zTlv8hG/cxSdmmRx+SLe9WB1V/o2wW+S6dqySbjNaA",
	"Jq9f+rtnb8oMYuTvnoU/24dKi6h/Pvs0ijYBHjpI7uDhC7zlpKkHs0yJ4RtkFR8EPiyHyZvyrwiN86Mr",
	"N1+VsehD59WqjoMbTHogLjS36yvkzxtuDkyDvla/gazveCId/76hm1qbu7wJ9Ar0FcQanGvhqLYUysKh",
	"9F/3fVsqrO/H942f0ASinP8Ma0/QYEFRc/B5gm5837oJOwRRTKwPfQCRlsWOTcgYF6ieIscK4N8qcgOl",
	"l80yF+9fkys/ApNILUrBzWQ4LGcOwplDujeHQbl9RS44ljkQlFw/Xr0k4/4L4dreU3rFs1zwBYdkSsmb",
	"cvT28ktu02I+iFU2rFWBHFSl2nAu1HyYMWNBD9+8fvHTu6ufnJcCnZnLxVXJTkMwgRUIxGNbIje+rxa4",
	"/4Z0J5hvVYARLqFykCzndEKfDqJB5I/yUoeu4Wo09H05M/zkH3iyGZq6wp58os2ed/Hc2R8JNGapJtLQ",
	"d1ldQI827mHbz816NFemI0X8BWyhZX1sHzQT/HUCIUjOLFbJxvsTvzx1gvp23Gv0+K/A/nn0wgvn/vCk",
	"UVJ5U+JHlawrJFaxOM+Fa4QpOfyLUc2uYw9uYfhLGP5KUtUScKocR9GjVntc56TsPex2o3Y2weXPNHQ3",
	"zq7tfX7j2lylDbxRNIcVkBoah42B5BFc7s7H8JNvmVTAWj8MVmWf5VuBKuS/Basd5LxXxv55hKHEfHA8",
	"/LPh5lFw2QOPzaaOJt5Cjb+bDIdCxUykytjJ0yiKdtKn+jPFFLrtKT+y0aB0blgvDbZcfZvQRzbqJDF+",
	"DIlxB4mweQ/3mF4wcZhOMKODHsv54em5VkkR+9mYLPjgX8ccU0NsKxGtMpsKg5vZ5n8DAAD//+/9lSP5",
	"MQAA",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

