// Package Summary provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

