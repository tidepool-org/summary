// Package Summary provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

