// Package Summary provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

