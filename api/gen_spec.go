// Package Summary provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package Summary

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

