// Package Summary provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

