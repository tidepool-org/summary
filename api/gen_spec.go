// Package Summary provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package Summary

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

