// Package Summary provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

