// Package Summary provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

